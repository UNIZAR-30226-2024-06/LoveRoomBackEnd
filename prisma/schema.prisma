generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model fotousuario {
  rutafoto   String     @db.VarChar(150)
  idusuario  Int
  usuario    usuario    @relation(fields: [idusuario], references: [id], onDelete: Cascade, onUpdate: NoAction)
  multimedia multimedia @relation(fields: [rutafoto], references: [ruta], onDelete: Cascade, onUpdate: NoAction)

  @@id([rutafoto, idusuario])
}

model localidad {
  id      Int       @id @default(autoincrement())
  nombre  String    @db.VarChar(75)
  usuario usuario[]
}

model match {
  idusuario1                        Int
  idusuario2                        Int
  usuario_match_idusuario1Tousuario usuario @relation("match_idusuario1Tousuario", fields: [idusuario1], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuario_match_idusuario2Tousuario usuario @relation("match_idusuario2Tousuario", fields: [idusuario2], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([idusuario1, idusuario2])
}

model mensaje {
  id             Int         @id @default(autoincrement())
  idsala         Int
  idusuario      Int
  texto          String?     @db.VarChar(500)
  fechahora      DateTime    @db.Timestamp(6)
  rutamultimedia String?     @db.VarChar(150)
  participa      participa   @relation(fields: [idsala, idusuario], references: [idsala, idusuario], onDelete: Cascade, onUpdate: NoAction)
  multimedia     multimedia? @relation(fields: [rutamultimedia], references: [ruta], onDelete: Cascade, onUpdate: NoAction)
  reporte        reporte[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model multimedia {
  ruta           String        @id @db.VarChar(150)
  tipomultimedia String        @db.VarChar(1)
  fotousuario    fotousuario[]
  mensaje        mensaje[]
  reporte        reporte[]
  usuario        usuario[]
}

model participa {
  idsala    Int
  idusuario Int
  mensaje   mensaje[]
  sala      sala      @relation(fields: [idsala], references: [id], onDelete: Cascade, onUpdate: NoAction)
  usuario   usuario   @relation(fields: [idusuario], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([idsala, idusuario])
}

model reporte {
  id             Int         @id @default(autoincrement())
  idmensaje      Int?
  idusuario      Int?
  texto          String?     @db.VarChar(500)
  rutamultimedia String?     @db.VarChar(150)
  motivo         String?     @db.VarChar(100)
  resuelto       Boolean
  mensaje        mensaje?    @relation(fields: [idmensaje], references: [id], onUpdate: NoAction)
  usuario        usuario?    @relation(fields: [idusuario], references: [id], onUpdate: NoAction)
  multimedia     multimedia? @relation(fields: [rutamultimedia], references: [ruta], onDelete: NoAction, onUpdate: NoAction)
}

model sala {
  id        Int         @id @default(autoincrement())
  nombre    String      @db.VarChar(50)
  idvideo   String      @db.VarChar(25)
  estado    String      @db.VarChar(25)
  participa participa[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model usuario {
  id                              Int           @id @default(autoincrement())
  correo                          String        @unique @db.VarChar(254)
  contrasena                      String        @db.VarChar(100)
  nombre                          String        @db.VarChar(50)
  sexo                            String        @db.VarChar(1)
  edad                            Int
  idlocalidad                     Int
  buscaedadmin                    Int
  buscaedadmax                    Int
  buscasexo                       String        @db.VarChar(1)
  fotoperfil                      String?       @db.VarChar(150)
  descripcion                     String        @db.VarChar(500)
  tipousuario                     String        @db.VarChar(20)
  baneado                         Boolean
  fotousuario                     fotousuario[]
  match_match_idusuario1Tousuario match[]       @relation("match_idusuario1Tousuario")
  match_match_idusuario2Tousuario match[]       @relation("match_idusuario2Tousuario")
  participa                       participa[]
  reporte                         reporte[]
  multimedia                      multimedia?   @relation(fields: [fotoperfil], references: [ruta], onDelete: NoAction, onUpdate: NoAction)
  localidad                       localidad     @relation(fields: [idlocalidad], references: [id], onDelete: NoAction, onUpdate: NoAction)
  videoviewer                     videoviewer[]
}

model videoviewer {
  idvideo   String  @db.VarChar(50)
  idusuario Int
  usuario   usuario @relation(fields: [idusuario], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@id([idvideo, idusuario])
}
