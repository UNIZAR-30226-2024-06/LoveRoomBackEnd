name: Docker Deployment

on:
  push:
    branches:
      - main  

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker build -t loveroom --build-arg DATABASE_URL="${{ secrets.DATABASE_URL }}" --build-arg SECRET="${{ secrets.SECRET }}" .

    - name: Save Docker image to file
      run: docker save loveroom > image.tar

    - name: Setup SSH
      run: |
        echo "${{ secrets.AZURE_SSH_KEY }}" > ssh_key.pem
        chmod 600 ssh_key.pem
        
    - name: Set timestamp as environment variable
      run: |
        echo "TIMESTAMP=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
        
    - name: Debug - Print TIMESTAMP
      run: |
        echo "TIMESTAMP: ${{ env.TIMESTAMP }}"

    - name: Add timestamp to image name
      run: |
        mv image.tar "image_${{ env.TIMESTAMP }}.tar"
    
    - name: Copy image to Azure VM
      run: | 
        scp -i ssh_key.pem -o StrictHostKeyChecking=no "image_${{ env.TIMESTAMP }}.tar" ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }}:/home/${{ secrets.AZURE_USERNAME }}/loveroom_images/
    
    - name: Stop and remove existing Docker container on Azure VM if running
      run: |
        is_running=$(ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "docker ps -q -f name=loveroom_container")
        if [ -n "$is_running" ]; then
          echo "Container is running."
          ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "docker stop loveroom_container && docker rm loveroom_container"
        else
          echo "Container is not running."
        fi
        
    - name: Load Docker image on Azure VM
      run: | 
        ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "docker load -i /home/${{ secrets.AZURE_USERNAME }}/loveroom_images/image_${{ env.TIMESTAMP }}.tar"

    - name: Run Docker container on Azure VM
      run: ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "docker run -d --name loveroom_container -p 5000:5000 -e DATABASE_URL='${{ secrets.DATABASE_URL }}' -e SECRET='${{ secrets.SECRET }}' loveroom"

    - name: Restart Nginx on Azure VM
      run: | 
       ssh -i ssh_key.pem -o StrictHostKeyChecking=no ${{ secrets.AZURE_USERNAME }}@${{ secrets.AZURE_HOST }} "sudo systemctl restart nginx"   
